// Cloud Storage Security Rules for AmaPlayer
rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Profile images - single level path
    match /profile-images/{userId} {
      allow read: if true;
      allow write: if request.auth != null 
        && request.auth.uid == userId
        && validateImageFile();
    }
    
    // Profile images - nested path with filename
    match /profile-images/{userId}/{fileName} {
      allow read: if true;
      allow write: if request.auth != null 
        && request.auth.uid == userId
        && validateImageFile();
    }
    
    // Post images - all nested paths
    match /posts/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && validateMediaFile();
    }
    
    // Post images - specific path structure
    match /posts/images/{userId}/{fileName} {
      allow read: if true;
      allow write: if request.auth != null 
        && request.auth.uid == userId
        && validateImageFile();
    }
    
    // Post videos
    match /post-videos/{userId}/{fileName} {
      allow read: if true;
      allow write: if request.auth != null 
        && request.auth.uid == userId
        && validateVideoFile();
    }
    
    // Stories images - THIS WAS MISSING!
    match /stories/images/{userId}/{fileName} {
      allow read: if true;
      allow write: if request.auth != null 
        && request.auth.uid == userId
        && validateImageFile();
    }
    
    // Stories videos - THIS WAS MISSING!
    match /stories/videos/{userId}/{fileName} {
      allow read: if true;
      allow write: if request.auth != null 
        && request.auth.uid == userId
        && validateVideoFile();
    }
    
    // Comments media (images/videos attached to comments)
    match /comments/{commentId}/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && validateMediaFile();
    }
    
    // Athlete highlights
    match /athlete-highlights/{userId}/{fileName} {
      allow read: if true;
      allow write: if request.auth != null 
        && request.auth.uid == userId
        && validateVideoFile();
    }
    
    // Training sessions
    match /training-sessions/{userId}/{fileName} {
      allow read: if true;
      allow write: if request.auth != null 
        && request.auth.uid == userId
        && validateVideoFile();
    }
    
    // Competitions
    match /competitions/{userId}/{fileName} {
      allow read: if true;
      allow write: if request.auth != null 
        && request.auth.uid == userId
        && validateVideoFile();
    }
    
    // Talent videos - MISSING RULE ADDED!
    match /talent-videos/{userId}/{fileName} {
      allow read: if true;
      allow write: if request.auth != null 
        && request.auth.uid == userId
        && validateVideoFile();
    }
    
    // Video thumbnails
    match /thumbnails/{userId}/{fileName} {
      allow read: if true;
      allow write: if request.auth != null 
        && request.auth.uid == userId
        && validateImageFile();
    }
    
    // Message attachments
    match /messages/{userId1}/{userId2}/{fileName} {
      allow read: if request.auth != null 
        && (request.auth.uid == userId1 || request.auth.uid == userId2);
      allow write: if request.auth != null 
        && (request.auth.uid == userId1 || request.auth.uid == userId2)
        && validateMediaFile();
    }
    
    // Chat group media
    match /groups/{groupId}/{userId}/{fileName} {
      allow read: if request.auth != null; // Add group membership check in production
      allow write: if request.auth != null 
        && request.auth.uid == userId
        && validateMediaFile();
    }
    
    // Events images (for admin dashboard event management)
    match /events/{fileName} {
      allow read: if true;
      allow write: if request.auth != null 
        && isAdminUser()
        && validateImageFile();
    }
    
    // Temporary uploads (for processing)
    match /temp/{userId}/{fileName} {
      allow read, write: if request.auth != null 
        && request.auth.uid == userId
        && validateMediaFile();
    }
    
    // Helper functions
    function validateImageFile() {
      return request.resource.size < 10 * 1024 * 1024 // 10MB limit
        && request.resource.contentType.matches('image/.*')
        && request.resource.contentType in [
          'image/jpeg', 'image/jpg', 'image/png', 'image/gif', 
          'image/webp', 'image/bmp', 'image/svg+xml', 'image/avif', 'image/heic'
        ];
    }
    
    function validateVideoFile() {
      return request.resource.size < 100 * 1024 * 1024 // 100MB limit
        && request.resource.contentType.matches('video/.*')
        && request.resource.contentType in [
          'video/mp4', 'video/mov', 'video/avi', 'video/wmv',
          'video/flv', 'video/webm', 'video/mkv', 'video/m4v'
        ];
    }
    
    function validateAudioFile() {
      return request.resource.size < 50 * 1024 * 1024 // 50MB limit
        && request.resource.contentType.matches('audio/.*')
        && request.resource.contentType in [
          'audio/mp3', 'audio/wav', 'audio/ogg', 'audio/m4a', 'audio/aac'
        ];
    }
    
    function validateDocumentFile() {
      return request.resource.size < 25 * 1024 * 1024 // 25MB limit
        && request.resource.contentType in [
          'application/pdf', 'text/plain', 
          'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'
        ];
    }
    
    function validateMediaFile() {
      return validateImageFile() || validateVideoFile() || validateAudioFile() || validateDocumentFile();
    }
    
    function isGuestUser() {
      return request.auth.token.firebase.sign_in_provider == 'anonymous';
    }
    
    function isAdminUser() {
      // Check if user has admin role in their custom claims or is in admin email list
      return request.auth.token.admin == true ||
             request.auth.token.email in [
               'admin@amaplayer.com', 
               'krishnakant.2000@gmail.com',
               'your-admin-email@gmail.com'  // Add your admin email here
             ];
    }
  }
}